<div class="modal fade @(IsVisible ? "show" : "")" style="display: @(IsVisible ? "block" : "none")" tabindex="-1" aria-hidden="@(!IsVisible)">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" @onclick="Cancel" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Message
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                <button type="button" class="btn @ConfirmButtonClass" @onclick="Confirm" disabled="@IsProcessing">
                    @if (IsProcessing)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                    }
                    @ConfirmButtonText
                </button>
            </div>
        </div>
    </div>
</div>

@if (IsVisible)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public string Title { get; set; } = "Confirm Action";
    [Parameter] public string Message { get; set; } = "Are you sure?";
    [Parameter] public string ConfirmButtonText { get; set; } = "Confirm";
    [Parameter] public string ConfirmButtonClass { get; set; } = "btn-primary";
    [Parameter] public bool IsProcessing { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private async Task Confirm()
    {
        await OnConfirm.InvokeAsync();
    }

    private async Task Cancel()
    {
        await OnCancel.InvokeAsync();
    }
}
